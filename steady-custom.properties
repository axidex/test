# vulas.core.space.token = <WORKSPACE_TOKEN>
vulas.shared.backend.serviceUrl=http://localhost:8033/backend
vulas.shared.tmpDir = vulas/tmp

vulas.core.appContext.group = gr
vulas.core.appContext.artifact = build_test_2
vulas.core.appContext.version = 1.2.3

# One or more dirs with application code and dependencies constructs (JAR, class, java), comma-separated
# Please extract nested JARs
vulas.core.app.sourceDir = app

# One or more package prefixes for code belonging to application, multiple entries to be comma-separated
vulas.core.app.appPrefixes = test

vulas.core.uploadEnabled = true

vulas.reach.preprocessDependencies = true
vulas.reach.wala.callgraph.reflection = NO_FLOW_TO_CASTS_NO_METHOD_INVOKE
vulas.reach.timeout = 120

vulas.core.instr.sourceDir =
vulas.core.instr.targetDir = vulas/target
vulas.core.instr.includeDir = vulas/include
vulas.core.instr.libDir = vulas/lib
vulas.core.instr.instrumentorsChoosen = org.eclipse.steady.java.monitor.trace.SingleTraceInstrumentor
vulas.core.instr.searchRecursive = true

vulas.report.reportDir = vulas/report
vulas.report.exceptionExcludeBugs =

# Limits the analysis to certain bugs (multiple values separated by comma)
# If empty, all relevant bugs retrieved from backend will be considered
# Default: empty
vulas.reach.bugs =

# Analysis framework to be used
# Possible values: wala, soot
vulas.reach.fwk = soot

# Regex to filter entry points (semicolon separated)
vulas.reach.constructFilter =

# All packages to be excluded from call graph construction, packages
# are separated by semicolon e.g. [java/.*;sun/.*]. Defaults for the different
# analysis frameworks are provided in the respective configuration files. -->
vulas.reach.excludePackages =

# All JAR files to be excluded from call graph construction (multiple entries to be separated by comma)
#
# Default: WebServicesAgent.jar (from Wily Introscope, an app perf monitoring tool that has invalid manifest header fields creating problems for Wala)
vulas.reach.excludeJars = WebServicesAgent.jar

# Dir to search for app source files (only steady:a2c)
# If empty, they will be fetched from backend
vulas.reach.sourceDir = 

# Timeout for reachability analysis (in mins)
# Default: 120 mins
vulas.reach.timeout = 120

# Max number of paths uploaded for a reachable change list element
vulas.reach.maxPathPerChangeListElement = 10

# Whether or not to collect touch points
# Default: true
vulas.reach.identifyTouchpoints = true

# Whether to search for the shortest path(s) from entry points to vulnerable constructs, or to quit after the first path found
# Default: true
vulas.reach.searchShortest = true
